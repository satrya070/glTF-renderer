#version 330 core
layout(location = 0) in vec3 in_vertex;
layout(location = 1) in vec3 in_normal;
layout(location = 2) in vec2 in_texcoord;
layout(location = 3) in vec4 in_tangent;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;


//out vec3 normal;
out vec3 position;
out vec2 texCoord;

out vec3 vertexColor;

void main() {
	gl_Position = projection * view * model * vec4(in_vertex, 1.0);
	position = gl_Position.xyz;
	//normal = normalize(mat3(MVP) * in_normal);
	position = in_vertex;
	texCoord = in_texcoord;

	vertexColor = (in_vertex + 1.0) * 0.5; // Map position to [0, 1] range for color
}